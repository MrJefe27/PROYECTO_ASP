@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<center>
    <h1 style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; color: darkblue; border-bottom-style:inset">PILARES DE LA PROGRAMACION ORIENTADA A OBJETOS</h1><br />
</center>
<ul>
    <li><b>Encapsulamiento</b></li>
    <ul>
        <li><p style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; text-align:justify">
            Es la forma de proteger los datos en un objeto, ocultando detalles internos y mostrando solo lo que es necesario. Es como un cofre del tesoro que guarda los tesoros (datos) y solo permite el acceso a ellos de la manera correcta.
            Es como tu mochila de escuela. Pones todas tus cosas (libros, bolígrafos, etc.) dentro de tu mochila y nadie más necesita saber qué hay dentro. Solo necesitan ver la mochila.
        </p></li>
    </ul>
    <li><b>Herencia</b></li>
    <ul>
        <li><p style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; text-align:justify">
            Es la capacidad de crear nuevas clases basadas en una clase existente. Es como tener una receta básica y añadir ingredientes extra para crear nuevas versiones de la receta.
                Imagina que tienes una receta básica para hacer un pastel. Quieres hacer un pastel de chocolate, por lo que tomas la receta básica y añades chocolate. No tienes que crear la receta desde cero.
        </p></li>
    </ul>
    <li><b>Polimorfismo</b></li>
    <ul>
        <li><p style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; text-align:justify">
                Permite a los objetos presentarse en múltiples formas. Es como tener una persona que es un estudiante en la escuela, un jugador en el campo de fútbol, y un hijo en casa. Dependiendo del contexto, la misma persona puede tomar diferentes roles.
                Es como una tarjeta de regalo. Puedes usarla en diferentes tiendas, pero sigue siendo una tarjeta de regalo. Así, un objeto en programación puede tener diferentes formas pero sigue siendo el mismo tipo de objeto.
        </p></li>
    </ul>
    <li><b>Abstracción</b></li>
    <ul>
        <li>
            <p style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; text-align:justify">
                Es la simplificación de sistemas complejos, ocultando detalles innecesarios y mostrando solo la información relevante. Es como un control remoto de TV que nos permite operar la TV sin necesidad de entender cómo funciona internamente.
                Es como cuando usas tu teléfono. No necesitas saber cómo funciona por dentro, solo necesitas saber cómo usar las aplicaciones y las funciones.
            </p>
        </li>
    </ul>
</ul>